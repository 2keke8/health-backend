<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zky.health.dao.AdviceMapper">
  <resultMap id="BaseResultMap" type="com.zky.health.entity.Advice">
    <id column="advice_id" jdbcType="INTEGER" property="adviceId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="healther_id" jdbcType="INTEGER" property="healtherId" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zky.health.entity.Advice">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    advice_id, user_id, healther_id, date
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>

  <select id="selectAll"  resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_advice
    where 1=1
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_advice
    where advice_id = #{adviceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_advice
    where advice_id = #{adviceId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zky.health.entity.Advice">
    insert into t_advice (advice_id, user_id, healther_id, 
      date, content)
    values (#{adviceId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{healtherId,jdbcType=INTEGER}, 
      #{date,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zky.health.entity.Advice">
    insert into t_advice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adviceId != null">
        advice_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="healtherId != null">
        healther_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adviceId != null">
        #{adviceId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="healtherId != null">
        #{healtherId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zky.health.entity.Advice">
    update t_advice
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="healtherId != null">
        healther_id = #{healtherId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where advice_id = #{adviceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zky.health.entity.Advice">
    update t_advice
    set user_id = #{userId,jdbcType=INTEGER},
      healther_id = #{healtherId,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where advice_id = #{adviceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zky.health.entity.Advice">
    update t_advice
    set user_id = #{userId,jdbcType=INTEGER},
      healther_id = #{healtherId,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP}
    where advice_id = #{adviceId,jdbcType=INTEGER}
  </update>
</mapper>